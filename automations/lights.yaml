#   _      _       _               _____
#  | |    (_)     (_)             |  __ \
#  | |     ___   ___ _ __   __ _  | |__) |___   ___  _ __ ___
#  | |    | \ \ / / | '_ \ / _` | |  _  // _ \ / _ \| '_ ` _ \
#  | |____| |\ V /| | | | | (_| | | | \ \ (_) | (_) | | | | | |
#  |______|_| \_/ |_|_| |_|\__, | |_|  \_\___/ \___/|_| |_| |_|
#                           __/ |
#                          |___/

- alias: "Lights: Adaptive Lighting TV Mode Control"
  description: "Control the sleep mode for adaptive lighting based on media player state"
  triggers:
    - trigger: state
      entity_id: media_player.woonkamer
    - trigger: state
      entity_id: input_boolean.tv_mode
  conditions:
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.woonkamer
          state: "playing"
        - condition: state
          entity_id: input_boolean.tv_mode
          state: "on"
    - condition: or
      conditions:
        - condition: template
          value_template: >
            {{ states('sensor.time') >= states('input_datetime.start_tvmodus')[0:5] }}
        - condition: template
          value_template: >
            {{ states('sensor.time') <= states('input_datetime.end_tvmodus')[0:5] }}
  actions:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.tv_mode
              state: "on"
            - condition: state
              entity_id: media_player.woonkamer
              state: "playing"
          sequence:
            - action: switch.turn_on
              target:
                entity_id: switch.adaptive_lighting_sleep_mode_living_room
        - conditions:
            - condition: or
              conditions:
                - condition: state
                  entity_id: input_boolean.tv_mode
                  state: "off"
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: media_player.woonkamer
                      state: "playing"
          sequence:
            - action: switch.turn_off
              target:
                entity_id: switch.adaptive_lighting_sleep_mode_living_room
  mode: single

#   _  ___ _       _
#  | |/ (_) |     | |
#  | ' / _| |_ ___| |__   ___ _ __
#  |  < | | __/ __| '_ \ / _ \ '_ \
#  | . \| | || (__| | | |  __/ | | |
#  |_|\_\_|\__\___|_| |_|\___|_| |_|
#

- alias: "Lights: turn on kitchen"
  triggers:
    - trigger: state
      entity_id: binary_sensor.activity_in_kitchen
      to: "on"
  conditions:
    - condition: state
      entity_id: input_boolean.cooking_mode
      state: "off"
  actions:
    - action: light.turn_on
      target:
        entity_id: light.keuken

- alias: "Lights: turn off kitchen"
  triggers:
    - trigger: state
      entity_id: binary_sensor.activity_in_kitchen
      to: "off"
  conditions:
    - condition: state
      entity_id: input_boolean.cooking_mode
      state: "off"
  actions:
    - action: light.turn_off
      target:
        entity_id: light.keuken

- alias: "Button: Keuken Mode Automation"
  triggers:
    - trigger: state
      entity_id: sensor.kitchen_button_action
      to: "single"
  actions:
    - action: input_boolean.toggle
      target:
        entity_id: input_boolean.cooking_mode

- alias: "Light: Cooking Mode Lighting Control"
  triggers:
    - trigger: state
      entity_id: input_boolean.cooking_mode
      to: "on"
    - trigger: state
      entity_id: input_boolean.cooking_mode
      to: "off"
  actions:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.cooking_mode
              state: "on"
          sequence:
            - action: switch.turn_off
              target:
                entity_id: switch.adaptive_lighting_kitchen
            - action: light.turn_on
              target:
                entity_id: light.keuken
              data:
                color_temp: 183
                brightness: 202
        - conditions:
            - condition: state
              entity_id: input_boolean.cooking_mode
              state: "off"
          sequence:
            - action: switch.turn_on
              target:
                entity_id: switch.adaptive_lighting_kitchen

#   _    _       _ _
#  | |  | |     | | |
#  | |__| | __ _| | |_      ____ _ _   _
#  |  __  |/ _` | | \ \ /\ / / _` | | | |
#  | |  | | (_| | | |\ V  V / (_| | |_| |
#  |_|  |_|\__,_|_|_| \_/\_/ \__,_|\__, |
#                                   __/ |
#                                  |___/

- alias: "Lights: turn on when motion detected in the hallway"
  triggers:
    - trigger: state
      entity_id: binary_sensor.activity_in_hallway
      to: "on"
  actions:
    - action: light.turn_on
      target:
        entity_id: light.gang

- alias: "Lights: turn off when motion detected in the hallway"
  triggers:
    - trigger: state
      entity_id: binary_sensor.activity_in_hallway
      to: "off"
  actions:
    - action: light.turn_off
      target:
        entity_id: light.gang

#  __          __           _           _
#  \ \        / /          | |         | |
#   \ \  /\  / /_ _ _ __ __| |_ __ ___ | |__   ___
#    \ \/  \/ / _` | '__/ _` | '__/ _ \| '_ \ / _ \
#     \  /\  / (_| | | | (_| | | | (_) | |_) |  __/
#      \/  \/ \__,_|_|  \__,_|_|  \___/|_.__/ \___|

- alias: "Lights: turn off when stopped motion detected in the hallway"
  triggers:
    - trigger: state
      entity_id: binary_sensor.activity_in_hallway
      to: "off"
      for:
        minutes: 12
  conditions:
    - condition: state
      entity_id: light.inloopkast
      state: "on"
  actions:
    - action: light.turn_off
      target:
        entity_id: light.inloopkast
#   ____           _
#  |  _ \         | |
#  | |_) | ___  __| |_ __ ___   ___  _ __ ___
#  |  _ < / _ \/ _` | '__/ _ \ / _ \| '_ ` _ \
#  | |_) |  __/ (_| | | | (_) | (_) | | | | | |
#  |____/ \___|\__,_|_|  \___/ \___/|_| |_| |_|

# - alias: "Lights: turn on bedroom"
#   triggers:
#     - trigger: state
#       entity_id: binary_sensor.someone_in_bedroom
#       to: 'on'
#   actions:
#     - action: light.turn_on
#       target:
#         entity_id: light.slaapkamer

# - alias: "Lights: turn off bedroom"
#   triggers:
#     - trigger: state
#       entity_id: binary_sensor.someone_in_bedroom
#       to: 'off'
#   actions:
#     - delay: '00:00:30'
#     - action: light.turn_off
#       target:
#         entity_id: light.slaapkamer
